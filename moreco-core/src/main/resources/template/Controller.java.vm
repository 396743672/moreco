package ${request.packageName}.controller;

import ${classInfo.packageName};
import ${request.packageName}.model.dto.${classInfo.clazzSimpleName}QueryRequest;
import ${request.packageName}.model.dto.${classInfo.clazzSimpleName}SaveRequest;
import ${request.packageName}.service.${classInfo.clazzName}Service;

import xyz.weechang.moreco.core.controller.BaseController;
import xyz.weechang.moreco.core.model.dto.PageModel;
import xyz.weechang.moreco.core.model.dto.R;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * @author ${request.author}
 * date ${date}
 * time ${time}
 */
@Api(tags = "${request.author}", description = "${request.author}")
@RequestMapping("${classInfo.lowerClazzSimpleName}")
@RestController
public class ${classInfo.clazzSimpleName}Controller extends BaseController {

    @Autowired
    private ${classInfo.clazzSimpleName}Service ${classInfo.lowerClazzSimpleName}Service;

    @ApiOperation("分页获取数据")
    @GetMapping("page")
    public R<PageModel<Role>> page(
            @ApiParam(name = "查询参数") ${classInfo.clazzSimpleName}QueryRequest queryRequest) {
        PageModel<${classInfo.clazzSimpleName}> page = ${classInfo.lowerClazzSimpleName}Service.findAll(queryRequest.toRole(), queryRequest.toPageRequest());
        ${classInfo.lowerClazzSimpleName}Service.convertDataMap(page.getList());
        return R.ok(page);
    }

    @ApiOperation("获取详情")
    @GetMapping("detail/{id}")
    public R<${classInfo.clazzSimpleName}> detail(
            @ApiParam(name = "id") @PathVariable("id") Long id) {
        ${classInfo.clazzSimpleName} role = roleService.detail(id);
        ${classInfo.lowerClazzSimpleName}Service.convertDataMap(role);
        return R.ok(role);
    }

    @ApiOperation("保存信息")
    @PostMapping("save")
    public R save(@RequestBody ${classInfo.clazzSimpleName}SaveRequest request) {
        ${classInfo.clazzSimpleName} ${classInfo.lowerClazzSimpleName} = request.toRole();
        ${classInfo.lowerClazzSimpleName}Service.save(${classInfo.lowerClazzSimpleName});
        return R.ok();
    }

    @ApiOperation("删除")
    @DeleteMapping("delete/{id}")
    public R delete(@ApiParam("id") @PathVariable("id") Long id) {
        ${classInfo.lowerClazzSimpleName}Service.delete(id);
        return R.ok();
    }
}
